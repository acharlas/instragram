services:
  postgres:
    image: postgres:16.10-alpine3.22
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: instagram
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d instagram"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:8.2.2-bookworm
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data

  minio-init:
    image: minio/mc:RELEASE.2025-08-13T08-35-41Z-cpuv1
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        until (/usr/bin/mc alias set local http://minio:9000 minio minio123); do sleep 3; done;
        /usr/bin/mc mb -p local/instagram-media;
        /usr/bin/mc anonymous set download local/instagram-media;
        exit 0;
      "

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env.backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio-init:
        condition: service_completed_successfully
    command:
      - uvicorn
      - main:app
      - --host
      - 0.0.0.0
      - --port
      - "8000"
      - --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env.frontend
    depends_on:
      - backend
    command: ["npm", "run", "dev"]
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"

volumes:
  postgres-data:
  redis-data:
  minio-data:
